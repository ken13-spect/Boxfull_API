generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  email     String      @unique
  name      String
  password  String
  isActive  Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Shipments Shipments[] // one to many relation
}

model Shipments {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  deliveryAddress    String
  shippingDate       DateTime
  referencePoint     String?
  indications        String?
  addresseeFirstName String
  addresseeLastName  String
  addresseeEmail     String     @unique
  addresseePhone     String
  pickUpAddress      String
  departmentId       String     @db.ObjectId
  department         Department @relation(fields: [departmentId], references: [id])
  townId             String     @db.ObjectId
  towns              Towns      @relation(fields: [townId], references: [id])
  UserId             String     @db.ObjectId
  user               Users      @relation(fields: [UserId], references: [id])
  products           Products[]
}

model Products {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  length      Float
  height      Float
  width       Float
  weight      Float
  units       Float
  description String
  ShipmentsId String    @db.ObjectId
  shipments   Shipments @relation(fields: [ShipmentsId], references: [id])
}

//catalog table
model Department {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String      @unique
  towns     Towns[] // one to many relation
  Shipments Shipments[]
}

model Towns {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String      @unique
  departmentId String      @db.ObjectId
  deparment    Department  @relation(fields: [departmentId], references: [id])
  Shipments    Shipments[]
}
